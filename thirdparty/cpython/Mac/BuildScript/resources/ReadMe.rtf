{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica-Oblique;
\f3\fmodern\fcharset0 CourierNewPSMT;\f4\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww13380\viewh14580\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 This package will install Python $FULL_VERSION for macOS $MACOSX_DEPLOYMENT_TARGET for the following architecture(s): $ARCHITECTURES.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \ul \ulc0 Certificate verification and OpenSSL\

\f0\b0 \ulnone \
This package includes its own private copy of OpenSSL 1.1.1.   The trust certificates in system and user keychains managed by the 
\f2\i Keychain Access 
\f0\i0 application and the 
\f2\i security
\f0\i0  command line utility are not used as defaults by the Python 
\f3 ssl
\f0  module.  A sample command script is included in 
\f3 /Applications/Python 3.9
\f0  to install a curated bundle of default root certificates from the third-party 
\f3 certifi
\f0  package ({\field{\*\fldinst{HYPERLINK "https://pypi.org/project/certifi/"}}{\fldrslt https://pypi.org/project/certifi/}}).  Double-click on 
\f3 Install Certificates
\f0  to run it.\
\
The bundled 
\f3 pip
\f0  has its own default certificate store for verifying download connections.\
\

\f1\b \ul Install Options\

\f0\b0 \ulnone \
You can control some aspects of what is installed by this package. To see the options, click on the 
\f4 Customize
\f0  button in the 
\f4 Installation Type
\f0  step of the macOS installer app.  Click on a package name in the list shown to see more information about that option.\
  \

\f1\b \ul Using IDLE or other Tk applications 
\f0\b0 \ulnone \
\
This package includes its own private version of Tcl/Tk 8.6. It does not use any system-supplied or third-party supplied versions of Tcl/Tk.\
\
Due to new security checks on macOS 10.15 Catalina, when launching IDLE macOS may open a window with a message 
\f1\b "Python" would like to access files in your Documents folder
\f0\b0 .  This is normal as IDLE uses your 
\f1\b Documents
\f0\b0  folder as its default when opening and saving files; you can still choose other locations in the 
\f1\b Open
\f0\b0  and 
\f1\b Save
\f0\b0  file dialog windows.  Click on the 
\f1\b OK
\f0\b0  button to proceed.\
\

\f1\b \ul macOS 11 (Big Sur) and Apple Silicon Mac support [updated in 3.9.8]\

\f0\b0 \ulnone \

\f1\b NEW as of 3.9.8
\f0\b0 :  The 
\f4 universal2
\f0  installer variant is now the default download from python.org and the legacy Intel-only variant is deprecated.\
\
Prior to the 3.9.1 release, python.org binaries for macOS have been provided via a downloadable installer that supports the Intel 64 architecture on macOS 10.9 and newer.  It will install and run on all Macs that run macOS 10.9 or later, including 11.0 (Big Sur). This variant 
\f2\i should
\f0\i0  run transparently on new Apple Silicon Macs using Apple's Rosetta 2 emulation. \
\
Beginning with 3.9.1, we also provide a new 
\f4 universal2
\f0  installer variant that provides universal binaries for both 
\f4 ARM64
\f0  and 
\f4 Intel 64
\f0  architectures and is also supported on all Macs that support macOS 10.9 or later.  Some of the advantages of the new installer variant: native ARM64 code on Apple Silicon Macs should run significantly faster than Rosetta 2-emulated code; some operating system functions and options introduced in macOS releases since 10.9 are now exposed when available (primarily in the os module); and the new installer variant includes Tcl/Tk 8.6.11 rather than 8.6.8.\
\
On Apple Silicon Macs with the 
\f4 universal2
\f0  variant installed, it is possible to run Python either with native ARM64 code or under Intel 64 emulation using Rosetta 2. This option might be useful for testing or if binary wheels are not yet available with native ARM64 binaries.  To easily force Python to run in emulation mode on an Apple Silicon Mac, invoke it from a command line shell with the 
\f4 python3-intel64
\f0  (or 
\f4 python3.9-intel64
\f0 ) command (new with 3.9.5) instead of just 
\f4 python3 (or python3.9)
\f0 . \
\
Binary wheels built for use with the legacy 10.9 variant 
\f2\i should
\f0\i0  also work with the new variant on Intel-based Macs or when running under Rosetta2 emulation on Apple Silicon Macs.  \
\
We encourage you to use the 
\f4 universal2
\f0  variant whenever possible.  The legacy 10.9+ Intel-only variant will not be provided for Python 3.10 and, as of the 3.9.8 release, the 
\f4 universal2
\f0  variant is now the default download. You may need to upgrade third-party components, like 
\f4 pip
\f0 , to later versions once they are released. You may experience differences in behavior in 
\f4 IDLE
\f0  and other Tk-based applications due to using the newer version of Tk.  As always, if you encounter problems when using this installer variant, please check {\field{\*\fldinst{HYPERLINK "https://bugs.python.org"}}{\fldrslt https://bugs.python.org}} for existing reports and for opening new issues.\

\f1\b \ul \
Other changes\

\f0\b0 \ulnone \
For other changes in this release, see the 
\f2\i What's new
\f0\i0  section in the {\field{\*\fldinst{HYPERLINK "https://www.python.org/doc/"}}{\fldrslt Documentation Set}} for this release and its 
\f2\i Release Notes
\f0\i0  link at {\field{\*\fldinst{HYPERLINK "https://www.python.org/downloads/"}}{\fldrslt https://www.python.org/downloads/}}.\
}